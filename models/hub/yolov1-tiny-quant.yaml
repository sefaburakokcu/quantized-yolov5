# Parameters
nc: 1  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 0.2  # layer channel multiple
anchors:
  - [10,14, 23,27, 37,58]  # P4/16

bit_width: 
 # - [8, 4, 4, 4, 4]  # in_weight_bit_width, in_act_bit_width, weight_bit_width, act_bit_width, out_weight_bit_width
# - [8, 4, 2, 8]  # in_weight_bit_width,  weight_bit_width, act_bit_width, out_weight_bit_width
- [8, 4, 4, 8]  # 

# YOLOv3-tiny backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, QuantConv, [16, 3, 1, None, 1, True, True, in_weight_bit_width, act_bit_width]],  # 0
   [-1, 1, nn.MaxPool2d, [2, 2, 0]],  # 1-P1/2
   [-1, 1, QuantConv, [32, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],
   [-1, 1, nn.MaxPool2d, [2, 2, 0]],  # 3-P2/4
   [-1, 1, QuantConv, [64, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],
   [-1, 1, nn.MaxPool2d, [2, 2, 0]],  # 5-P3/8
   [-1, 1, QuantConv, [128, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],
   [-1, 1, nn.MaxPool2d, [2, 2, 0]],  # 7-P4/16
   [-1, 1, QuantConv, [256, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],
   [-1, 1, nn.MaxPool2d, [2, 2, 0]],  # 9-P5/32
   [-1, 1, QuantConv, [512, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],  # 10
  ]

# YOLOv3-tiny head
head:
  [[-1, 1, QuantConv, [1024, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],
   [-1, 1, QuantConv, [256, 1, 1, None, 1, True, True, weight_bit_width, act_bit_width]],
   [-1, 1, QuantConv, [80, 3, 1, None, 1, True, True, weight_bit_width, act_bit_width]],  # 13 (P5/32-large)
   [-1, 1, QuantSimpleConv, [(nc+5)*3, 1, 1, None, 1, out_weight_bit_width, act_bit_width]],
   
   [[14], 1, Detect, [nc, anchors, False, True]],  # Detect(P4, P5) num_classes, anchors, in_conv, use_hardtanh
  ]
